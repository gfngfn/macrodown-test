let \epsilon = {\\varepsilon} in
let \toksty @tok = {\\:\\text\{\\textcolor\{red\}\{$\\underline\{\\mathbf\{@tok;\}\}$\}\}\\:} in
let \token-eoi = {\toksty{eoi}} in
let \token-cs = {\toksty{cs}} in
let \token-var = {\toksty{var}} in
let \token-id = {\toksty{id}} in
let \token-class = {\toksty{class}} in
let \token-char = {\toksty{char}} in
let \token-bgrp = {\toksty{\\\{}} in
let \token-egrp = {\toksty{\\\}}} in
let \token-sep = {\toksty{\|}} in
let \token-end = {\toksty{end}} in
let \token-space = {\toksty{space}} in
let \token-break = {\toksty{break}} in
let \token-lparen = {\toksty{(}} in
let \token-rparen = {\toksty{)}} in
let \token-blist = {\toksty{[}} in
let \token-elist = {\toksty{]}} in
let \token-listpunct = {\toksty{\;}} in
let \token-bin = {\toksty{bin}} in
let \token-let = {\toksty{let}} in
let \token-and = {\toksty{and}} in
let \token-defeq = {\toksty{=}} in
let \token-in = {\toksty{in}} in
let \token-if = {\toksty{if}} in
let \token-then = {\toksty{then}} in
let \token-else = {\toksty{else}} in
let \token-finish = {\toksty{finish}} in
let \token-ident = {\toksty{ident}} in
let \token-int = {\toksty{int}} in
let \token-opnqt = {\toksty{open\`}} in
let \token-clsqt = {\toksty{close\`}} in
let \token-opnstr = {\toksty{open\\\{}} in
let \token-clsstr = {\toksty{close\\\}}} in
let \token-opnprog = {\toksty{open(}} in
let \token-clsprog = {\toksty{close)}} in
%
let sub-math-dp-gather lst =
  if is-empty lst then {} else
  ( let head = list-head lst in
    let tail = list-tail lst in
      head ^ {\\\\} ^ (sub-math-dp-gather tail)
  )
in
let \math-dp-gather lst = {
  \\begin\{align*\}\deeper(sub-math-dp-gather lst);\\end\{align*\}
}
in
let \cfl nontm lst =
  if is-empty lst then {} else
  ( let head = list-head lst in
    let tail = list-tail lst in
      nontm ^ {\space;\\rightarrow&\space;} ^ head ^ (sub-cfl tail)
  )
and sub-cfl lst =
  if is-empty lst then {} else
  ( let head = list-head lst in
    let tail = list-tail lst in
    ( if same head {*br*} then
        {\\\\&\space;}
      else
        {\space;\\enskip\|\\enskip\space;} ^ head
    ) ^ ( if is-empty tail then {} else sub-cfl tail )
  )
in
  finish
